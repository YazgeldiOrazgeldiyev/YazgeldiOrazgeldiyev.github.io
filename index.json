
    
    
    
    
    
    
    
    
    
    
    
    
    
    [{"authors":null,"categories":null,"content":"Оразгелдиев Язгелди - студент группы НКАбд-04-22. Обучается в Российском Университете Дружбы Народов.\n","date":1683676800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1683676800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"0001-01-01T00:00:00Z","relpermalink":"","section":"authors","summary":"Оразгелдиев Язгелди - студент группы НКАбд-04-22. Обучается в Российском Университете Дружбы Народов.","tags":null,"title":"Оразгелдиев Язгелди","type":"authors"},{"authors":[],"categories":null,"content":" Click on the Slides button above to view the built-in slides feature. Slides can be added in a few ways:\nCreate slides using Wowchemy’s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes. Further event details, including page elements such as image galleries, can be added to the body of this page.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a8edef490afe42206247b6ac05657af0","permalink":"https://example.com/talk/example-talk/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/talk/example-talk/","section":"event","summary":"An example talk using Wowchemy's Markdown slides feature.","tags":[],"title":"Example Talk","type":"event"},{"authors":null,"categories":null,"content":"Various programs for programming in c++\n","date":1683676800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683676800,"objectID":"027d629eb14253e1566e31d14c7283c0","permalink":"https://example.com/project/c++/","publishdate":"2023-05-10T00:00:00Z","relpermalink":"/project/c++/","section":"project","summary":"Programming in C++","tags":["C++"],"title":"C++ and environment","type":"project"},{"authors":null,"categories":null,"content":"Various programs for programming in Python\n","date":1683676800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683676800,"objectID":"4ea90f9f6fbe3f365644149f03c7dd55","permalink":"https://example.com/project/python/","publishdate":"2023-05-10T00:00:00Z","relpermalink":"/project/python/","section":"project","summary":"Various programs in Python","tags":["Python"],"title":"Python and environment","type":"project"},{"authors":["Оразгелдиев Язгелди"],"categories":null,"content":"Overview За 4-ую неделю я успел устать от лабораторных работ Я изменил мои проекты по разным языкам программирования Практиковал работу с кодом на языке С. Запускал скрипты через командную строку Понял, что если выделять хоть пару часов на учебу, оказывается все можно успеть сделать в срок License Copyright 2023-present Yazgeldi Orazgeldiyev.\nReleased under the ISO license.\n","date":1683676800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683676800,"objectID":"ddb01b739cf5307319ca53020e9096ed","permalink":"https://example.com/post/3week/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/post/3week/","section":"post","summary":"Пост по прошедшей неделе.","tags":null,"title":"Четвертая неделя","type":"post"},{"authors":["Оразгелдиев Язгелди"],"categories":null,"content":"Overview Сегодня в мире существуют сотни языков программирования — как среди них выбрать наиболее подходящий для изучения? Публикуем список из 20 наиболее популярных вариантов. Перечень составлен на основе индексов TIOBE, Google Trends и StackOverflow Trends, языки расположены в алфавитном порядке.\nBash Сценарии командной оболочки Unix, созданные Кеном Томпсоном в начале 1970-х годов, тесно связаны с языком программирования C. Bash — обновленная оболочка Unix — была впервые выпущена в конце 80-х годов и до сих пор активно разрабатывается. На Bash обычно пишутся сценарии конфигурации сервера, поэтому это хороший выбор для работы в современных облачных средах с контейнерным хранением и микросервисами. Скрипты командной оболочки используются достаточно часто, так что знание этого языка пригодится.\nТакже стоит обратить внимание на zsh, который в настоящее время является оболочкой по умолчанию в macOS.\nОбласти применения: администрирование сервера, инструменты интерфейса командной строки, DevOps, виртуализация.\nCOBOL Один из старейших языков, используемых до сих пор, был создан Грейс Хоппер в конце 1950-х годов и предназначался для стандартизации разработки крупномасштабных бизнес-приложений на компьютерах. Блестящая концепция, которая до сих пор применяется в кроссплатформенных SDK. Через системы COBOL проходят невероятные 95% транзакций ATM, причем многие из этих устройств работают круглосуточно 365 дней в году. Такие поставщики устройств, как IBM, разрабатывают более мощные машины, предназначенные для COBOL, но продолжают обслуживать и обновлять существующие системы из-за затрат и рисков, связанных с их заменой. В ближайшее время COBOL никуда не уйдет. Это хороший выбор для тех, кто хочет работать с клиентами из финансовой сферы.\nОбласти применения: банковское дело / финансы, международные корпорации, правительства.\nC/C++ Эти языки часто занимают вершины различных рейтингов — их ценят за мощность и быстродействие. C был создан в начале 1970-х годов Деннисом Ритчи, C ++ в 1985 году разработал Бьёрн Страуструп. Сегодня два этих языка лежат в основе всего: от ОС и игр до современных научных вычислений и машинного обучения. C и C++ хорошо подходят для требовательных приложений, которым важны низкоуровневый доступ к оборудованию и производительность. Для освоения этих языков нужно время и определенные усилия.\nОбласть применения: разработка ОС / SDK, встроенные устройства, игровые движки, наука.\nC# C#, выпущенный Microsoft в 2000 году, был разработан Андерсом Хейлсбергом как кроссплатформенный язык объектно-ориентированного программирования. Сейчас он часто используется для разработки бизнес-приложений, API, игр и многого другого. Благодаря широкому набору функций этот язык подходит для работы с графикой и других задач асинхронного программирования.\nОбласти применения: корпоративные приложения, разработка программного и пользовательского интерфейса, игры, графика.\nDart Современный язык, разработанный в Google для создания мобильных, десктопных, веб-и серверных приложений. Его создатель Ларс Бак также придумал JavaSript Engine V8. Dart напоминает другие современные языки объектно-ориентированного программирования — C #, TypeScript и Java — и предоставляет обширный набор функций, подходящих для определения сложных взаимодействий, асинхронных операций, анимации и других задач.\nОбласти применения: кроссплатформенные приложения, облачные сервисы / корпоративные системы, игры, графика.\nFortran Fortran, разработанный в IBM в 1950-х годах Джоном Бакусом, — это язык общего назначения, который был создан для проведения научных и инженерных работ. Он до сих пор широко используется в этих целях, в том числе для контрольного тестирования самых быстрых суперкомпьютеров в мире. Он также применялся в космических и физических исследованиях и моделировании погоды.\nОбласти применения: аэрокосмическая/оборонная промышленность, научные вычисления, численный анализ.\nJava Java — это ООП-язык общего назначения, разработанный в 1990-х годах Джеймсом Гослингом в Sun (сейчас принадлежит Oracle) и предназначенный для компиляции в байт-код для запуска на виртуальной машине Java. К 2020 году к ним относятся практически все виды устройств — от телевизоров и игровых приставок до серверов, телефонов и даже кухонных приборов. Язык широко распространен в корпорациях и университетах, что сделало его популярным как среди начинающих программистов, так и среди опытных разработчиков.\nОбласти применения: корпоративные приложения, встроенные системы, веб-сервисы, игры.\nJavaScript JavaScript разработал Брэндон Айх в 1990-х годах, чтобы добавлять выполнение скриптов на сайты. Сегодня это универсальный язык веб-интерфейса с мощными стандартизированными функциями, которые поддерживаются всеми основными браузерами. JavaScript соответствует стандарту EcmaScript, который обновляется каждые несколько лет с добавлением новых спецификаций языка. Кроме того, JavaScript часто используется для разработки серверных служб и API, мобильных приложений, игр и другого …","date":1683676800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1683676800,"objectID":"b90c80dc209c8568d202e74c35aecd19","permalink":"https://example.com/post/spl/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/post/spl/","section":"post","summary":"Языки программирования.","tags":null,"title":"Языки научного программирования.","type":"post"},{"authors":["Оразгелдиев Язгелди"],"categories":null,"content":"Overview Создание презентации:\nОткройте приложение PowerPoint.\nВ левой области выберите Создать.\nВыберите один из вариантов:\nЧтобы создать презентацию с нуля, выберите Пустая презентация.\nЧтобы использовать подготовленный макет, выберите один из шаблонов.\nЧтобы ознакомиться с советами по использованию PowerPoint, выберите Принять тур, а затем — Создать.\nДобавление слайда\nВ эскизах на левой панели выберите слайд, на который вы хотите подписаться.\nНа вкладке Главная в разделе Слайды выберите Создать слайд.\nВ разделе Слайды выберите Макет, а затем выберите нужный макет в меню.\nДобавление и форматирование текста\nПоместите курсор в текстовое поле и введите что-то.\nВыделите текст, а затем выберите один или несколько параметров в разделе Шрифт на вкладке Главная , например Шрифт, Увеличить размер шрифта, Уменьшить размер шрифта, Полужирный, Курсив, Подчеркивание и т. д.\nЧтобы создать маркированный или нумерованный список, выделите текст, а затем выберите элемент Маркеры или Нумерация.\nДобавление рисунка, фигуры и многого другого\nПерейдите на вкладку Вставка.\nДобавление рисунка\nВ разделе Изображения выберите Рисунки.\nВ меню Вставка рисунка из выберите нужный источник.\nНайдите нужный рисунок, выберите его и нажмите кнопку Вставить.\nЧтобы добавить иллюстрации, выполните приведенные ниже действия. В разделе Иллюстрации выберите Фигуры, Значки, Трехмерные модели, SmartArt или Диаграмма.\nВ диалоговом окне, открывшемся при щелчке одного из типов иллюстраций, выберите нужный элемент и следуйте указаниям, чтобы вставить его.\nLicense Copyright 2023-present Yazgeldi Orazgeldiyev.\nReleased under the ISO license.\n","date":1682640000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682640000,"objectID":"185785e23644fee3c13a32279f70f926","permalink":"https://example.com/post/create-presentation/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/post/create-presentation/","section":"post","summary":"Гайд по Power Point","tags":null,"title":"Создание презентации","type":"post"},{"authors":["Оразгелдиев Язгелди"],"categories":null,"content":"Overview За 3-ью неделю я смог выполнить все необходимые задания по Операционным системам. Я научился прикреплять ссылки на сайты своих учетных записей. За это время я работал с кодом на Питон на виртуальной машине и проверял ее правильность License Copyright 2023-present Yazgeldi Orazgeldiyev.\nReleased under the ISO license.\n","date":1682640000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1682640000,"objectID":"0973ad221869b8f412da015a3596facf","permalink":"https://example.com/post/2week/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/post/2week/","section":"post","summary":"Пост по прошедшей неделе.","tags":null,"title":"Третья неделя","type":"post"},{"authors":["Оразгелдиев Язгелди"],"categories":null,"content":"Overview Что такое «система контроля версий» и почему это важно? Система контроля версий — это система, записывающая изменения в файл или набор файлов в течение времени и позволяющая вернуться позже к определённой версии. Для контроля версий файлов в этой книге в качестве примера будет использоваться исходный код программного обеспечения, хотя на самом деле вы можете использовать контроль версий практически для любых типов файлов.\nЕсли вы графический или web-дизайнер и хотите сохранить каждую версию изображения или макета (скорее всего, захотите), система контроля версий (далее VCS) — как раз то, что нужно. Она позволяет вернуть файлы к состоянию, в котором они были до изменений, вернуть проект к исходному состоянию, увидеть изменения, увидеть, кто последний менял что-то и вызвал проблему, кто поставил задачу и когда и многое другое. Использование VCS также значит в целом, что, если вы сломали что-то или потеряли файлы, вы спокойно можете всё исправить. В дополнение ко всему вы получите всё это без каких-либо дополнительных усилий.\nЛокальные системы контроля версий Многие люди в качестве метода контроля версий применяют копирование файлов в отдельный каталог (возможно даже, каталог с отметкой по времени, если они достаточно сообразительны). Данный подход очень распространён из-за его простоты, однако он невероятно сильно подвержен появлению ошибок. Можно легко забыть в каком каталоге вы находитесь и случайно изменить не тот файл или скопировать не те файлы, которые вы хотели.\nДля того, чтобы решить эту проблему, программисты давным-давно разработали локальные VCS с простой базой данных, которая хранит записи о всех изменениях в файлах, осуществляя тем самым контроль ревизий.\nОдной из популярных VCS была система RCS, которая и сегодня распространяется со многими компьютерами. RCS хранит на диске наборы патчей (различий между файлами) в специальном формате, применяя которые она может воссоздавать состояние каждого файла в заданный момент времени.\nЦентрализованные системы контроля версий Следующая серьёзная проблема, с которой сталкиваются люди, — это необходимость взаимодействовать с другими разработчиками. Для того, чтобы разобраться с ней, были разработаны централизованные системы контроля версий (Centralized Version Control System, далее CVCS). Такие системы, как CVS, Subversion и Perforce, используют единственный сервер, содержащий все версии файлов, и некоторое количество клиентов, которые получают файлы из этого централизованного хранилища. Применение CVCS являлось стандартом на протяжении многих лет.\nЦентрализованный контроль версий Такой подход имеет множество преимуществ, особенно перед локальными VCS. Например, все разработчики проекта в определённой степени знают, чем занимается каждый из них. Администраторы имеют полный контроль над тем, кто и что может делать, и гораздо проще администрировать CVCS, чем оперировать локальными базами данных на каждом клиенте.\nНесмотря на это, данный подход тоже имеет серьёзные минусы. Самый очевидный минус — это единая точка отказа, представленная централизованным сервером. Если этот сервер выйдет из строя на час, то в течение этого времени никто не сможет использовать контроль версий для сохранения изменений, над которыми работает, а также никто не сможет обмениваться этими изменениями с другими разработчиками. Если жёсткий диск, на котором хранится центральная БД, повреждён, а своевременные бэкапы отсутствуют, вы потеряете всё — всю историю проекта, не считая единичных снимков репозитория, которые сохранились на локальных машинах разработчиков. Локальные VCS страдают от той же самой проблемы: когда вся история проекта хранится в одном месте, вы рискуете потерять всё.\nРаспределённые системы контроля версий Здесь в игру вступают распределённые системы контроля версий (Distributed Version Control System, далее DVCS). В DVCS (таких как Git, Mercurial, Bazaar или Darcs) клиенты не просто скачивают снимок всех файлов (состояние файлов на определённый момент времени) — они полностью копируют репозиторий. В этом случае, если один из серверов, через который разработчики обменивались данными, умрёт, любой клиентский репозиторий может быть скопирован на другой сервер для продолжения работы. Каждая копия репозитория является полным бэкапом всех данных.\nРаспределённый контроль версий Более того, многие DVCS могут одновременно взаимодействовать с несколькими удалёнными репозиториями, благодаря этому вы можете работать с различными группами людей, применяя различные подходы единовременно в рамках одного проекта. Это позволяет применять сразу несколько подходов в разработке, например, иерархические модели, что совершенно невозможно в централизованных системах.\nLicense Copyright 2023-present Yazgeldi Orazgeldiyev.\nReleased under the ISO license.\n","date":1679184000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679184000,"objectID":"f2197b7b0f15076a524fa4e09923c40d","permalink":"https://example.com/post/gitversion/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/post/gitversion/","section":"post","summary":"Операционные системы","tags":null,"title":"Управление версиями. Git","type":"post"},{"authors":["Оразгелдиев Язгелди"],"categories":null,"content":"Overview За неделю я смог выполнить все необходимые задания по Операционным системам. Я научился оформлять и видоизменять страничку собственного сайта. Оформил все, что необходимо сделать и загрузил на Гит все файлы. License Copyright 2023-present Yazgeldi Orazgeldiyev.\nReleased under the ISO license.\n","date":1679097600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1679097600,"objectID":"5466ec81151ee54ac4fa3ca8769dcd91","permalink":"https://example.com/post/1week/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/post/1week/","section":"post","summary":"Пост по прошедшей неделе.","tags":null,"title":"Первая неделя","type":"post"},{"authors":["Оразгелдиев Язгелди"],"categories":null,"content":" Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1554595200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1554595200,"objectID":"557dc08fd4b672a0c08e0a8cf0c9ff7d","permalink":"https://example.com/publication/preprint/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/preprint/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example preprint / working paper","type":"publication"},{"authors":[],"categories":[],"content":"Create slides in Markdown with Wowchemy Wowchemy | Documentation\nFeatures Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides Controls Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;) Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\nFragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\nOne Two Three A fragment can accept two optional parameters:\nclass: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\nOnly the speaker can read these notes Press S key to view Themes black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/media/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}} Custom CSS Example Let’s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; } Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"https://example.com/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/slides/example/","section":"slides","summary":"An introduction to using Wowchemy's Slides feature.","tags":[],"title":"Slides","type":"slides"},{"authors":["Оразгелдиев Язгелди","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1441065600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1441065600,"objectID":"966884cc0d8ac9e31fab966c4534e973","permalink":"https://example.com/publication/journal-article/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/journal-article/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":["Source Themes"],"title":"An example journal article","type":"publication"},{"authors":["Оразгелдиев Язгелди","Robert Ford"],"categories":null,"content":" Click the Cite button above to demo the feature to enable visitors to import publication metadata into their reference management software. Create your slides in Markdown - click the Slides button to check out the example. Supplementary notes can be added here, including code, math, and images.\n","date":1372636800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1372636800,"objectID":"69425fb10d4db090cfbd46854715582c","permalink":"https://example.com/publication/conference-paper/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/publication/conference-paper/","section":"publication","summary":"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis posuere tellus ac convallis placerat. Proin tincidunt magna sed ex sollicitudin condimentum.","tags":[],"title":"An example conference paper","type":"publication"}]